<h1>新しいイベントを作成</h1>

<%= form_with(model: @event, url: user_event_index_path, local: true) do |form| %>
  <% if @event.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@event.errors.count, "エラー") %>により、このイベントを保存できませんでした:</h2>
      <ul>
        <% @event.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :address, "住所" %>
    <%= form.text_field :address, id: 'address', placeholder: '住所を入力してください' %>
  </div>

  <div id="map" style="height: 400px; width: 100%;"></div>

  <div>
    <%= form.hidden_field :latitude, id: 'latitude' %>
    <%= form.hidden_field :longitude, id: 'longitude' %>
  </div>

  <div>
    <%= form.label :start_time, "開始時間" %>
    <%= form.datetime_local_field :start_time, id: 'start_time' %>
  </div>

  <div>
    <%= form.label :end_time, "終了時間" %>
    <%= form.datetime_local_field :end_time, id: 'end_time' %>
  </div>

  <div>
    <%= form.label :genre, "ジャンル" %>
    <%= form.collection_select :genre_id, @genres || [], :id, :name, { prompt: 'ジャンルを選択してください' }, { id: 'genre_select', name: '' } %>
  </div>

  <div>
    <%= form.label :subgenre, "サブジャンル" %>
    <%= form.collection_select :subgenre_id, [], :id, :name, { prompt: 'サブジャンルを選択してください' }, id: 'subgenre_select' %>
  </div>


  <div>
    <%= form.label :position, "自分の行いたい役割" %>
    <%= form.text_field :position, id: 'position', placeholder: '例: ピッチャー' %>
  </div>

  <div>
    <%= form.label :people_count, "一緒に参加したい人数(自分も含む)" %>
    <%= form.select :people_count, options_for_select((2..4).map { |n| [n.to_s, n] }), { prompt: '人数を選択してください' }, id: 'people_count' %>
  </div>

  <div>
    <%= form.label :comment, "何か一言あれば" %>
    <%= form.text_area :comment, id: 'comment', placeholder: '久しぶりに、キャッチボールしたいと思って応募しました。' %>
  </div>

  <%= form.submit 'イベントを作成する' %>
<% end %>

<script>
  let map, marker, geocoder;

  function initMap() {
    geocoder = new google.maps.Geocoder();
    map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: 35.6895, lng: 139.6917 }, // 東京をデフォルトに設定
      zoom: 13,
    });

    marker = new google.maps.Marker({
      position: { lat: 35.6895, lng: 139.6917 },
      map: map,
      draggable: true,
    });

    marker.addListener('dragend', function () {
      let position = marker.getPosition();
      document.getElementById('latitude').value = position.lat();
      document.getElementById('longitude').value = position.lng();
    });
  }

  function codeAddress() {
    let address = document.getElementById('address').value;
    geocoder.geocode({ address: address }, function (results, status) {
      if (status === 'OK') {
        map.setCenter(results[0].geometry.location);
        marker.setPosition(results[0].geometry.location);
        document.getElementById('latitude').value = results[0].geometry.location.lat();
        document.getElementById('longitude').value = results[0].geometry.location.lng();
      } else {
        alert('住所の検索に失敗しました: ' + status);
        document.getElementById('latitude').value = '';
        document.getElementById('longitude').value = '';
      }
    });
  }

  document.querySelector('form').addEventListener('submit', function (event) {
    const latitude = document.getElementById('latitude').value;
    const longitude = document.getElementById('longitude').value;

    if (!latitude || !longitude) {
      event.preventDefault();
      alert('有効な住所を入力して、緯度と経度を取得してください。');
    }
  });

  document.getElementById('address').addEventListener('blur', codeAddress);

  document.getElementById('genre_select').addEventListener('change', function () {
    let genreId = this.value;

    if (!genreId) {
      document.getElementById('subgenre_select').innerHTML = '<option value="">サブジャンルを選択してください</option>';
      return;
    }

    fetch(`/subgenre?genre_id=${genreId}`)
      .then(response => response.json())
      .then(data => {
        let subgenreSelect = document.getElementById('subgenre_select');
        subgenreSelect.innerHTML = '<option value="">サブジャンルを選択してください</option>';
        data.subgenres.forEach(subgenre => {
          let option = document.createElement('option');
          option.value = subgenre.id;
          option.textContent = subgenre.name;
          subgenreSelect.appendChild(option);
        });
      });
  });
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= raw Rails.application.credentials.google_maps[:api_key] %>&callback=initMap" async defer></script>
